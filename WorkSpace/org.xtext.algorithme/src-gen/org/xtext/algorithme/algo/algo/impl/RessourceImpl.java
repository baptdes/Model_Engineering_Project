/**
 * generated by Xtext 2.32.0
 */
package org.xtext.algorithme.algo.algo.impl;

import org.eclipse.emf.common.notify.Notification;

import org.eclipse.emf.ecore.EClass;

import org.eclipse.emf.ecore.impl.ENotificationImpl;
import org.eclipse.emf.ecore.impl.MinimalEObjectImpl;

import org.xtext.algorithme.algo.algo.AlgoPackage;
import org.xtext.algorithme.algo.algo.Ressource;
import org.xtext.algorithme.algo.algo.TypeRessource;

/**
 * <!-- begin-user-doc -->
 * An implementation of the model object '<em><b>Ressource</b></em>'.
 * <!-- end-user-doc -->
 * <p>
 * The following features are implemented:
 * </p>
 * <ul>
 *   <li>{@link org.xtext.algorithme.algo.algo.impl.RessourceImpl#getType <em>Type</em>}</li>
 *   <li>{@link org.xtext.algorithme.algo.algo.impl.RessourceImpl#getEmplacement <em>Emplacement</em>}</li>
 * </ul>
 *
 * @generated
 */
public class RessourceImpl extends MinimalEObjectImpl.Container implements Ressource
{
  /**
   * The default value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected static final TypeRessource TYPE_EDEFAULT = TypeRessource.PYTHON;

  /**
   * The cached value of the '{@link #getType() <em>Type</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getType()
   * @generated
   * @ordered
   */
  protected TypeRessource type = TYPE_EDEFAULT;

  /**
   * The default value of the '{@link #getEmplacement() <em>Emplacement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmplacement()
   * @generated
   * @ordered
   */
  protected static final String EMPLACEMENT_EDEFAULT = null;

  /**
   * The cached value of the '{@link #getEmplacement() <em>Emplacement</em>}' attribute.
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @see #getEmplacement()
   * @generated
   * @ordered
   */
  protected String emplacement = EMPLACEMENT_EDEFAULT;

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  protected RessourceImpl()
  {
    super();
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  protected EClass eStaticClass()
  {
    return AlgoPackage.Literals.RESSOURCE;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public TypeRessource getType()
  {
    return type;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setType(TypeRessource newType)
  {
    TypeRessource oldType = type;
    type = newType == null ? TYPE_EDEFAULT : newType;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlgoPackage.RESSOURCE__TYPE, oldType, type));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String getEmplacement()
  {
    return emplacement;
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void setEmplacement(String newEmplacement)
  {
    String oldEmplacement = emplacement;
    emplacement = newEmplacement;
    if (eNotificationRequired())
      eNotify(new ENotificationImpl(this, Notification.SET, AlgoPackage.RESSOURCE__EMPLACEMENT, oldEmplacement, emplacement));
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public Object eGet(int featureID, boolean resolve, boolean coreType)
  {
    switch (featureID)
    {
      case AlgoPackage.RESSOURCE__TYPE:
        return getType();
      case AlgoPackage.RESSOURCE__EMPLACEMENT:
        return getEmplacement();
    }
    return super.eGet(featureID, resolve, coreType);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eSet(int featureID, Object newValue)
  {
    switch (featureID)
    {
      case AlgoPackage.RESSOURCE__TYPE:
        setType((TypeRessource)newValue);
        return;
      case AlgoPackage.RESSOURCE__EMPLACEMENT:
        setEmplacement((String)newValue);
        return;
    }
    super.eSet(featureID, newValue);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public void eUnset(int featureID)
  {
    switch (featureID)
    {
      case AlgoPackage.RESSOURCE__TYPE:
        setType(TYPE_EDEFAULT);
        return;
      case AlgoPackage.RESSOURCE__EMPLACEMENT:
        setEmplacement(EMPLACEMENT_EDEFAULT);
        return;
    }
    super.eUnset(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public boolean eIsSet(int featureID)
  {
    switch (featureID)
    {
      case AlgoPackage.RESSOURCE__TYPE:
        return type != TYPE_EDEFAULT;
      case AlgoPackage.RESSOURCE__EMPLACEMENT:
        return EMPLACEMENT_EDEFAULT == null ? emplacement != null : !EMPLACEMENT_EDEFAULT.equals(emplacement);
    }
    return super.eIsSet(featureID);
  }

  /**
   * <!-- begin-user-doc -->
   * <!-- end-user-doc -->
   * @generated
   */
  @Override
  public String toString()
  {
    if (eIsProxy()) return super.toString();

    StringBuilder result = new StringBuilder(super.toString());
    result.append(" (type: ");
    result.append(type);
    result.append(", emplacement: ");
    result.append(emplacement);
    result.append(')');
    return result.toString();
  }

} //RessourceImpl
