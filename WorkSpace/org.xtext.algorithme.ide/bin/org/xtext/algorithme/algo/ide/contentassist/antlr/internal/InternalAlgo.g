/*
 * generated by Xtext 2.32.0
 */
grammar InternalAlgo;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.algorithme.algo.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.algorithme.algo.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.algorithme.algo.services.AlgoGrammarAccess;

}
@parser::members {
	private AlgoGrammarAccess grammarAccess;

	public void setGrammarAccess(AlgoGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleCatalogue
entryRuleCatalogue
:
{ before(grammarAccess.getCatalogueRule()); }
	 ruleCatalogue
{ after(grammarAccess.getCatalogueRule()); } 
	 EOF 
;

// Rule Catalogue
ruleCatalogue 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCatalogueAccess().getGroup()); }
		(rule__Catalogue__Group__0)
		{ after(grammarAccess.getCatalogueAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleAlgorithme
entryRuleAlgorithme
:
{ before(grammarAccess.getAlgorithmeRule()); }
	 ruleAlgorithme
{ after(grammarAccess.getAlgorithmeRule()); } 
	 EOF 
;

// Rule Algorithme
ruleAlgorithme 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getGroup()); }
		(rule__Algorithme__Group__0)
		{ after(grammarAccess.getAlgorithmeAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleRessource
entryRuleRessource
:
{ before(grammarAccess.getRessourceRule()); }
	 ruleRessource
{ after(grammarAccess.getRessourceRule()); } 
	 EOF 
;

// Rule Ressource
ruleRessource 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getRessourceAccess().getGroup()); }
		(rule__Ressource__Group__0)
		{ after(grammarAccess.getRessourceAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRulePort
entryRulePort
:
{ before(grammarAccess.getPortRule()); }
	 rulePort
{ after(grammarAccess.getPortRule()); } 
	 EOF 
;

// Rule Port
rulePort 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getPortAccess().getGroup()); }
		(rule__Port__Group__0)
		{ after(grammarAccess.getPortAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypeRessource
ruleTypeRessource
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRessourceAccess().getAlternatives()); }
		(rule__TypeRessource__Alternatives)
		{ after(grammarAccess.getTypeRessourceAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule Direction
ruleDirection
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getAlternatives()); }
		(rule__Direction__Alternatives)
		{ after(grammarAccess.getDirectionAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule TypeDonnees
ruleTypeDonnees
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDonneesAccess().getAlternatives()); }
		(rule__TypeDonnees__Alternatives)
		{ after(grammarAccess.getTypeDonneesAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRessource__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeRessourceAccess().getPythonEnumLiteralDeclaration_0()); }
		('Python')
		{ after(grammarAccess.getTypeRessourceAccess().getPythonEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeRessourceAccess().getScriptEnumLiteralDeclaration_1()); }
		('Script')
		{ after(grammarAccess.getTypeRessourceAccess().getScriptEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Direction__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDirectionAccess().getEntreeEnumLiteralDeclaration_0()); }
		('Entree')
		{ after(grammarAccess.getDirectionAccess().getEntreeEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getDirectionAccess().getSortieEnumLiteralDeclaration_1()); }
		('Sortie')
		{ after(grammarAccess.getDirectionAccess().getSortieEnumLiteralDeclaration_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeDonnees__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeDonneesAccess().getEntierEnumLiteralDeclaration_0()); }
		('Entier')
		{ after(grammarAccess.getTypeDonneesAccess().getEntierEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDonneesAccess().getFlottantEnumLiteralDeclaration_1()); }
		('Flottant')
		{ after(grammarAccess.getTypeDonneesAccess().getFlottantEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDonneesAccess().getTexteEnumLiteralDeclaration_2()); }
		('Texte')
		{ after(grammarAccess.getTypeDonneesAccess().getTexteEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeDonneesAccess().getBooleenEnumLiteralDeclaration_3()); }
		('Booleen')
		{ after(grammarAccess.getTypeDonneesAccess().getBooleenEnumLiteralDeclaration_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__0__Impl
	rule__Catalogue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getCatalogueKeyword_0()); }
	'catalogue'
	{ after(grammarAccess.getCatalogueAccess().getCatalogueKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__1__Impl
	rule__Catalogue__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getNomAssignment_1()); }
	(rule__Catalogue__NomAssignment_1)
	{ after(grammarAccess.getCatalogueAccess().getNomAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__2__Impl
	rule__Catalogue__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getCatalogueAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__3__Impl
	rule__Catalogue__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getAlgorithmesAssignment_3()); }
	(rule__Catalogue__AlgorithmesAssignment_3)*
	{ after(grammarAccess.getCatalogueAccess().getAlgorithmesAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Catalogue__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCatalogueAccess().getRightCurlyBracketKeyword_4()); }
	'}'
	{ after(grammarAccess.getCatalogueAccess().getRightCurlyBracketKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithme__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__0__Impl
	rule__Algorithme__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getAlgorithmKeyword_0()); }
	'algorithm'
	{ after(grammarAccess.getAlgorithmeAccess().getAlgorithmKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__1__Impl
	rule__Algorithme__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getNomAssignment_1()); }
	(rule__Algorithme__NomAssignment_1)
	{ after(grammarAccess.getAlgorithmeAccess().getNomAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__2__Impl
	rule__Algorithme__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__3__Impl
	rule__Algorithme__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getDocumentationKeyword_3()); }
	'documentation'
	{ after(grammarAccess.getAlgorithmeAccess().getDocumentationKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__4__Impl
	rule__Algorithme__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getDocumentationAssignment_4()); }
	(rule__Algorithme__DocumentationAssignment_4)
	{ after(grammarAccess.getAlgorithmeAccess().getDocumentationAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__5__Impl
	rule__Algorithme__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getRessourceKeyword_5()); }
	'ressource'
	{ after(grammarAccess.getAlgorithmeAccess().getRessourceKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__6__Impl
	rule__Algorithme__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getRessourceAssignment_6()); }
	(rule__Algorithme__RessourceAssignment_6)
	{ after(grammarAccess.getAlgorithmeAccess().getRessourceAssignment_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__7__Impl
	rule__Algorithme__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getGroup_7()); }
	(rule__Algorithme__Group_7__0)?
	{ after(grammarAccess.getAlgorithmeAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Algorithme__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group_7__0__Impl
	rule__Algorithme__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getPortsKeyword_7_0()); }
	'ports'
	{ after(grammarAccess.getAlgorithmeAccess().getPortsKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group_7__1__Impl
	rule__Algorithme__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_7_1()); }
	'{'
	{ after(grammarAccess.getAlgorithmeAccess().getLeftCurlyBracketKeyword_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group_7__2__Impl
	rule__Algorithme__Group_7__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getPortAssignment_7_2()); }
	(rule__Algorithme__PortAssignment_7_2)*
	{ after(grammarAccess.getAlgorithmeAccess().getPortAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Algorithme__Group_7__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__Group_7__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_7_3()); }
	'}'
	{ after(grammarAccess.getAlgorithmeAccess().getRightCurlyBracketKeyword_7_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Ressource__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ressource__Group__0__Impl
	rule__Ressource__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRessourceAccess().getTypeAssignment_0()); }
	(rule__Ressource__TypeAssignment_0)
	{ after(grammarAccess.getRessourceAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ressource__Group__1__Impl
	rule__Ressource__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRessourceAccess().getPathKeyword_1()); }
	'path'
	{ after(grammarAccess.getRessourceAccess().getPathKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Ressource__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getRessourceAccess().getEmplacementAssignment_2()); }
	(rule__Ressource__EmplacementAssignment_2)
	{ after(grammarAccess.getRessourceAccess().getEmplacementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Port__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__0__Impl
	rule__Port__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getDirectionAssignment_0()); }
	(rule__Port__DirectionAssignment_0)
	{ after(grammarAccess.getPortAccess().getDirectionAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__1__Impl
	rule__Port__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getConstantAssignment_1()); }
	(rule__Port__ConstantAssignment_1)?
	{ after(grammarAccess.getPortAccess().getConstantAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__2__Impl
	rule__Port__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getNomAssignment_2()); }
	(rule__Port__NomAssignment_2)
	{ after(grammarAccess.getPortAccess().getNomAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__3__Impl
	rule__Port__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getColonKeyword_3()); }
	':'
	{ after(grammarAccess.getPortAccess().getColonKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Port__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getPortAccess().getTypeAssignment_4()); }
	(rule__Port__TypeAssignment_4)
	{ after(grammarAccess.getPortAccess().getTypeAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Catalogue__NomAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogueAccess().getNomIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getCatalogueAccess().getNomIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Catalogue__AlgorithmesAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCatalogueAccess().getAlgorithmesAlgorithmeParserRuleCall_3_0()); }
		ruleAlgorithme
		{ after(grammarAccess.getCatalogueAccess().getAlgorithmesAlgorithmeParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__NomAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getNomIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getAlgorithmeAccess().getNomIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__DocumentationAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getDocumentationSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getAlgorithmeAccess().getDocumentationSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__RessourceAssignment_6
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getRessourceRessourceParserRuleCall_6_0()); }
		ruleRessource
		{ after(grammarAccess.getAlgorithmeAccess().getRessourceRessourceParserRuleCall_6_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Algorithme__PortAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getAlgorithmeAccess().getPortPortParserRuleCall_7_2_0()); }
		rulePort
		{ after(grammarAccess.getAlgorithmeAccess().getPortPortParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRessourceAccess().getTypeTypeRessourceEnumRuleCall_0_0()); }
		ruleTypeRessource
		{ after(grammarAccess.getRessourceAccess().getTypeTypeRessourceEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Ressource__EmplacementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getRessourceAccess().getEmplacementSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getRessourceAccess().getEmplacementSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__DirectionAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getDirectionDirectionEnumRuleCall_0_0()); }
		ruleDirection
		{ after(grammarAccess.getPortAccess().getDirectionDirectionEnumRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__ConstantAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getConstantConstantKeyword_1_0()); }
		(
			{ before(grammarAccess.getPortAccess().getConstantConstantKeyword_1_0()); }
			'constant'
			{ after(grammarAccess.getPortAccess().getConstantConstantKeyword_1_0()); }
		)
		{ after(grammarAccess.getPortAccess().getConstantConstantKeyword_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__NomAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getNomIDTerminalRuleCall_2_0()); }
		RULE_ID
		{ after(grammarAccess.getPortAccess().getNomIDTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Port__TypeAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getPortAccess().getTypeTypeDonneesEnumRuleCall_4_0()); }
		ruleTypeDonnees
		{ after(grammarAccess.getPortAccess().getTypeTypeDonneesEnumRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
